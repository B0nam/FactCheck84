@model IEnumerable<FactCheck84.Models.Text>

@{
    ViewData["Title"] = "Library";
}

<style>
    .list-conteiner
    {
        display: flex;
        flex-direction: column;
        height: 100vh;
    }
    .title-conteiner
    {

    }

    .header-conteiner {
        display: flex; /* Alterado para display flex */
        justify-content: space-around; /* Alinha os itens horizontalmente com espaçamento igual */
        align-items: start; /* Alinha os itens verticalmente no centro */
    }
    .body-conteiner {
        height: 100%;
        width: 100%;
    }

    .card-conteiner {
        display: flex;
        flex-direction: row;
        border-style: none;
        outline: none;
        text-decoration: none;

        height: 7vh;
        background-color: #222;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
        border-radius: 15px;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        font-family: "Farfetch Basis","Helvetica Neue",Arial,sans-serif;
        font-size: 12px;
        margin: 0;
        outline: none;
        overflow: hidden;
        text-transform: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        transition: background-color 0.3s ease-in-out, opacity 0.3s ease-in-out;
        margin-top: 5px;
        margin-bottom: 5px;

    }

    .card-conteiner:hover, .card-conteiner:focus {
        background-color: #4E4E4E; /* Altera a cor de fundo ao passar o mouse */
        opacity: 0.9;
    }

    .card-status-color {
        height: 100%;
        width: 1%;
        background-color: black;
    }

    .card-content-conteiner {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 10px;
        
        height: 100%;
        width: 99%;
    }

    .card-left
    {
        width: 15%;
    }

    .card-middle {
        width: 75%;
    }

    .card-right {
        width: 10%;
    }


    .card-author
    {
        text-align: start;
    }

    .card-text {
        text-align: start;
    }

    .card-date{
        text-align: end;
    }

    .horizontal-grey {
        height: 0.5vh;
        background-color: #222;
        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
        margin: 0 -20px; /* Remove a margem horizontal da linha vermelha */
    }

    .header-content
    {
        height: 5vh;
        width: 100%;
        display:flex;
        justify-content: flex-start;
    }

    .ellipsis {
        text-overflow: ellipsis; /* enables ellipsis */
        white-space: nowrap; /* keeps the text in a single line */
        overflow: hidden; /* keeps the element from overflowing its parent */
    }

</style>

<div class="list-conteiner">
    <div class="title-conteiner">
        <h1>Library</h1>
    </div>
    <div class="horizontal-grey"></div>
    <div class="header-conteiner">
        <div class="header-content">
            Author
        </div>
        <div class="header-content">
            title
        </div>
        <div class="header-content">
            Description
        </div>
        <div class="header-content">
            Date
        </div>
    </div>
    <div class="body-conteiner">
    @foreach (var item in Model)
    {
        string backgroundColor;
        
        if (item.TextStatusId == 1)
        {
            backgroundColor = "#00D1FF";
        }
            else if (item.TextStatusId == 2)
        {
            backgroundColor = "#FFE500";
        }
        else if (item.TextStatusId == 3)
        {
            backgroundColor = "#970000";
        }
        else if (item.TextStatusId == 4)
        {
            backgroundColor = "#6B0086";
        }
        else
        {
            backgroundColor = "#222";
        }

        <a class="card-conteiner" asp-action="Details" asp-route-id="@item.Id">
            <div class="card-status-color" style="background-color: @backgroundColor;"></div>
            <div class="card-content-conteiner">
                <div class="card-left">
                        <div class="card-author">@Html.DisplayFor(modelItem => item.Author.Name)</div>
                </div>
                <div class="card-middle">
                        <div class="card-text ellipsis"><strong>@item.Title</strong> - <cite>@item.Description</cite></div>
                </div>
                <div class="card-right">
                        <div class="card-date">@item.CreationDate.ToString("dd/MM/yyyy")</div>
                </div>
            </div>
        </a>
    }
    </div>
</div>