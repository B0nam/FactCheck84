@model FactCheck84.Models.RedactedWord

@{
    ViewData["Title"] = "Edit";
}

<style>
    .base-form {
        background-color: #222;
        padding: 20px;
        border-radius: 30px;
        font-size: 15px;
    }

    /* Estilize a caixa de conteúdo (textarea) */
    .content-textarea {
        height: 300px; /* Ajuste a altura conforme necessário */
    }

    /* Centralize os elementos do formulário */
    .center-form {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* Aumente a largura do campo de entrada */
    .wide-input {
        width: 100%;
    }
</style>

<h1>Edit</h1>


<div class="base-form">
    <h4>RedactedWord</h4>
    <hr />
    <div class="col-md-8">
        <form asp-action="Create" class="">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Word" class="control-label"></label>
                <input asp-for="Word" class="form-control" />
                <span asp-validation-for="Word" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="NewWord" class="control-label">Replace Word</label>
                <input asp-for="NewWord" class="form-control" id="textField" />
                <span asp-validation-for="NewWord" class="text-danger" id="validationField"></span>
            </div>

            <div class="form-group">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsHidden" id="checkboxToggle" /> @Html.DisplayNameFor(model => model.IsHidden)
                </label>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // A função será acionada quando o estado do checkbox mudar
        function toggleTextField() {
            var checkbox = document.getElementById("checkboxToggle");
            var textField = document.getElementById("textField");

            // Se o checkbox estiver marcado, defina o valor padrão no campo de texto
            if (checkbox.checked) {
                textField.value = "[REDACTED]";
            } else {
                // Se o checkbox não estiver marcado, deixe o campo de texto vazio
                textField.value = "";
            }

            // Desabilite ou habilite o campo de texto com base no estado do checkbox
            textField.disabled = checkbox.checked;
        }

        // Adicione um ouvinte de evento ao checkbox para chamar a função quando o estado mudar
        var checkbox = document.getElementById("checkboxToggle");
        checkbox.addEventListener("change", toggleTextField);

        // Chame a função para definir o estado inicial do campo de texto com base no estado atual do checkbox
        toggleTextField();
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
